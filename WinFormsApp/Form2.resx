<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XbPhCkZH1968UxJArP/Z
</value>
  </data>
</root>